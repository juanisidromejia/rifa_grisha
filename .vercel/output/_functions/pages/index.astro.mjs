import { c as createComponent, m as maybeRenderHead, r as renderTemplate, a as createAstro, b as renderComponent, d as renderHead, e as addAttribute } from '../chunks/astro/server_CDjB31Lh.mjs';
import 'kleur/colors';
import { $ as $$HeaderGrisha } from '../chunks/HeaderGrisha_5DuKFRQu.mjs';
import 'clsx';
/* empty css                                 */
export { renderers } from '../renderers.mjs';

const $$RaffleDetails = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<section class="raffle-details-section" data-astro-cid-36heh6p3> <h2 data-astro-cid-36heh6p3>Detalles de la Rifa</h2> <p data-astro-cid-36heh6p3>
¡Participa en nuestra rifa para tener la oportunidad de ganar una
        increíble <strong data-astro-cid-36heh6p3>Guitarra de Concierto</strong>!
</p> <p data-astro-cid-36heh6p3>
El ganador será determinado por la coincidencia de los **últimos tres
        dígitos del número de tu boleto** con los últimos tres dígitos del
        **Primer Premio de la Lotería Nacional** en el próximo sorteo.
</p> <p data-astro-cid-36heh6p3>¡Mucha suerte a todos los participantes!</p> </section> `;
}, "/home/jimp/develop/astro/rifa_grisha/src/components/RaffleDetails.astro", void 0);

const $$RafflePurchase = createComponent(($$result, $$props, $$slots) => {
  return renderTemplate`${maybeRenderHead()}<section class="raffle-purchase-section" data-astro-cid-mh3h42so> <h2 data-astro-cid-mh3h42so>¡Participa en la Rifa!</h2> <p data-astro-cid-mh3h42so>Para adquirir tus números de rifa y participar por la guitarra de concierto, sigue estos sencillos pasos:</p> <div class="purchase-steps" data-astro-cid-mh3h42so> <div class="step" data-astro-cid-mh3h42so> <span class="step-number" data-astro-cid-mh3h42so>1</span> <h3 data-astro-cid-mh3h42so>Regístrate en la página principal</h3> <p data-astro-cid-mh3h42so>Asegúrate de haber registrado tu correo electrónico en la sección de registro para que podamos enviarte los detalles del depósito y tus números de rifa.</p> </div> <div class="step" data-astro-cid-mh3h42so> <span class="step-number" data-astro-cid-mh3h42so>2</span> <h3 data-astro-cid-mh3h42so>Realiza tu Depósito</h3> <p data-astro-cid-mh3h42so>Una vez registrado, te proporcionaremos los datos necesarios para que realices tu depósito de forma segura.</p> </div> <div class="step" data-astro-cid-mh3h42so> <span class="step-number" data-astro-cid-mh3h42so>3</span> <h3 data-astro-cid-mh3h42so>Confirmación y Números de Rifa</h3> <p data-astro-cid-mh3h42so>Tras confirmar tu depósito internamente, recibirás <strong data-astro-cid-mh3h42so>dos números de rifa únicos</strong> directamente en tu correo electrónico. ¡Mucha suerte!</p> </div> </div> <p class="data-storage-note" data-astro-cid-mh3h42so>Tus datos de contacto y números de rifa serán guardados de forma segura en una base de datos, usando el servidor de Vercel.</p> </section> `;
}, "/home/jimp/develop/astro/rifa_grisha/src/components/RafflePurchase.astro", void 0);

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Astro = createAstro();
const $$Index = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Index;
  return renderTemplate(_a || (_a = __template(['<html lang="en" data-astro-cid-j7pv25f6> <head><meta charset="utf-8"><link rel="icon" type="image/svg+xml" href="/favicon.svg"><meta name="viewport" content="width=device-width"><meta name="generator"', "><title>Rifa Grisha - Reg\xEDstrate</title>", "</head> <body data-astro-cid-j7pv25f6> ", " <main data-astro-cid-j7pv25f6> ", " ", ' <section class="registration-section" data-astro-cid-j7pv25f6> <h2 data-astro-cid-j7pv25f6>Reg\xEDstrate para Participar</h2> <p data-astro-cid-j7pv25f6>\nIngresa tu correo electr\xF3nico para recibir las instrucciones\n                    de pago y participar en la rifa.\n</p> <form id="registration-form" data-astro-cid-j7pv25f6> <input type="email" id="email" name="email" placeholder="tu@correo.com" required data-astro-cid-j7pv25f6> <button type="submit" data-astro-cid-j7pv25f6>Registrarme</button> <div id="form-message" class="message" style="display: none;" data-astro-cid-j7pv25f6></div> </form> <div class="whatsapp-link" data-astro-cid-j7pv25f6> <p data-astro-cid-j7pv25f6>\xBFPrefieres comunicarte por WhatsApp?</p> <a id="whatsapp-link-landing" href="https://wa.me/+593981985015?text=Hola!%20Quiero%20registrarme%20para%20la%20rifa." target="_blank" rel="noopener noreferrer" data-astro-cid-j7pv25f6> <img src="/whatsapp-icon.svg" alt="WhatsApp Icon" class="whatsapp-icon" data-astro-cid-j7pv25f6>\nEnviar mensaje por WhatsApp\n</a> <p class="small-text" data-astro-cid-j7pv25f6>\n(Haz clic para enviarnos un mensaje y te ayudaremos con\n                        el registro)\n</p> </div> </section> </main> <script>\n            document\n                .getElementById("registration-form")\n                .addEventListener("submit", async (e) => {\n                    e.preventDefault();\n                    const emailInput = document.getElementById("email");\n                    const formMessage = document.getElementById("form-message");\n                    const whatsappLinkElement = document.getElementById("whatsapp-link-landing"); // Get the WhatsApp link element\n                    const email = emailInput.value; // Capture email before clearing input\n\n                    formMessage.style.display = "none"; // Ocultar mensaje anterior\n\n                    try {\n                        const response = await fetch("/api/register-email", {\n                            method: "POST",\n                            headers: {\n                                "Content-Type": "application/json",\n                            },\n                            body: JSON.stringify({ email }),\n                        });\n\n                        const data = await response.json();\n\n                        if (response.ok) {\n                            formMessage.textContent = data.message; // Mostrar mensaje de \xE9xito desde la API\n                            formMessage.className = "message success";\n                            emailInput.value = ""; // Limpiar campo\n\n                            // Update WhatsApp link with the registered email\n                            if (whatsappLinkElement) {\n                                const initialText = "Hola!%20Soy%20";\n                                const encodedEmail = encodeURIComponent(email);\n                                const remainingText = "%20y%20quiero%20registrarme%20para%20la%20rifa.";\n                                whatsappLinkElement.href = `https://wa.me/+593981985015?text=${initialText}${encodedEmail}${remainingText}`;\n                            }\n\n                        } else {\n                            formMessage.textContent =\n                                data.message || "Hubo un error en el registro.";\n                            formMessage.className = "message error";\n                        }\n                    } catch (error) {\n                        console.error("Error al enviar el formulario:", error);\n                        formMessage.textContent =\n                            "Ocurri\xF3 un error de conexi\xF3n. Int\xE9ntalo de nuevo m\xE1s tarde.";\n                        formMessage.className = "message error";\n                    } finally {\n                        formMessage.style.display = "block"; // Mostrar el mensaje\n                    }\n                });\n        <\/script> </body> </html>'], ['<html lang="en" data-astro-cid-j7pv25f6> <head><meta charset="utf-8"><link rel="icon" type="image/svg+xml" href="/favicon.svg"><meta name="viewport" content="width=device-width"><meta name="generator"', "><title>Rifa Grisha - Reg\xEDstrate</title>", "</head> <body data-astro-cid-j7pv25f6> ", " <main data-astro-cid-j7pv25f6> ", " ", ' <section class="registration-section" data-astro-cid-j7pv25f6> <h2 data-astro-cid-j7pv25f6>Reg\xEDstrate para Participar</h2> <p data-astro-cid-j7pv25f6>\nIngresa tu correo electr\xF3nico para recibir las instrucciones\n                    de pago y participar en la rifa.\n</p> <form id="registration-form" data-astro-cid-j7pv25f6> <input type="email" id="email" name="email" placeholder="tu@correo.com" required data-astro-cid-j7pv25f6> <button type="submit" data-astro-cid-j7pv25f6>Registrarme</button> <div id="form-message" class="message" style="display: none;" data-astro-cid-j7pv25f6></div> </form> <div class="whatsapp-link" data-astro-cid-j7pv25f6> <p data-astro-cid-j7pv25f6>\xBFPrefieres comunicarte por WhatsApp?</p> <a id="whatsapp-link-landing" href="https://wa.me/+593981985015?text=Hola!%20Quiero%20registrarme%20para%20la%20rifa." target="_blank" rel="noopener noreferrer" data-astro-cid-j7pv25f6> <img src="/whatsapp-icon.svg" alt="WhatsApp Icon" class="whatsapp-icon" data-astro-cid-j7pv25f6>\nEnviar mensaje por WhatsApp\n</a> <p class="small-text" data-astro-cid-j7pv25f6>\n(Haz clic para enviarnos un mensaje y te ayudaremos con\n                        el registro)\n</p> </div> </section> </main> <script>\n            document\n                .getElementById("registration-form")\n                .addEventListener("submit", async (e) => {\n                    e.preventDefault();\n                    const emailInput = document.getElementById("email");\n                    const formMessage = document.getElementById("form-message");\n                    const whatsappLinkElement = document.getElementById("whatsapp-link-landing"); // Get the WhatsApp link element\n                    const email = emailInput.value; // Capture email before clearing input\n\n                    formMessage.style.display = "none"; // Ocultar mensaje anterior\n\n                    try {\n                        const response = await fetch("/api/register-email", {\n                            method: "POST",\n                            headers: {\n                                "Content-Type": "application/json",\n                            },\n                            body: JSON.stringify({ email }),\n                        });\n\n                        const data = await response.json();\n\n                        if (response.ok) {\n                            formMessage.textContent = data.message; // Mostrar mensaje de \xE9xito desde la API\n                            formMessage.className = "message success";\n                            emailInput.value = ""; // Limpiar campo\n\n                            // Update WhatsApp link with the registered email\n                            if (whatsappLinkElement) {\n                                const initialText = "Hola!%20Soy%20";\n                                const encodedEmail = encodeURIComponent(email);\n                                const remainingText = "%20y%20quiero%20registrarme%20para%20la%20rifa.";\n                                whatsappLinkElement.href = \\`https://wa.me/+593981985015?text=\\${initialText}\\${encodedEmail}\\${remainingText}\\`;\n                            }\n\n                        } else {\n                            formMessage.textContent =\n                                data.message || "Hubo un error en el registro.";\n                            formMessage.className = "message error";\n                        }\n                    } catch (error) {\n                        console.error("Error al enviar el formulario:", error);\n                        formMessage.textContent =\n                            "Ocurri\xF3 un error de conexi\xF3n. Int\xE9ntalo de nuevo m\xE1s tarde.";\n                        formMessage.className = "message error";\n                    } finally {\n                        formMessage.style.display = "block"; // Mostrar el mensaje\n                    }\n                });\n        <\/script> </body> </html>'])), addAttribute(Astro2.generator, "content"), renderHead(), renderComponent($$result, "HeaderGrisha", $$HeaderGrisha, { "data-astro-cid-j7pv25f6": true }), renderComponent($$result, "RaffleDetails", $$RaffleDetails, { "data-astro-cid-j7pv25f6": true }), renderComponent($$result, "RafflePurchase", $$RafflePurchase, { "data-astro-cid-j7pv25f6": true }));
}, "/home/jimp/develop/astro/rifa_grisha/src/pages/index.astro", void 0);

const $$file = "/home/jimp/develop/astro/rifa_grisha/src/pages/index.astro";
const $$url = "";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
    __proto__: null,
    default: $$Index,
    file: $$file,
    url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
