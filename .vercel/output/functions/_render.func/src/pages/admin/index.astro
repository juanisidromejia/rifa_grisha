---
import HeaderGrisha from "../../components/HeaderGrisha.astro";

// Lógica de protección: Si no hay cookie de sesión 'admin_session', redirige al login.
const isAuthenticated = Astro.cookies.has("admin_session");

// Asegúrate de que esta redirección solo ocurra si se está intentando acceder a /admin directamente.
// Si ya estás en /admin/login, no deberías redirigir de nuevo.
if (
    !isAuthenticated &&
    Astro.request.url.includes("/admin") &&
    !Astro.request.url.includes("/admin/login")
) {
    return Astro.redirect("/admin/login");
}
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>Rifa Grisha - Panel de Administración</title>
        <style>
            body {
                font-family: sans-serif;
                line-height: 1.6;
                margin: 0;
                padding: 0;
                background-color: #f4f4f4;
                color: #333;
            }
            main {
                max-width: 900px;
                margin: 50px auto;
                padding: 30px;
                background: #fff;
                border-radius: 8px;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
            }
            h1 {
                color: #764ba2;
                font-size: 2.5rem;
                margin-bottom: 30px;
                text-align: center;
            }
            .dashboard-section {
                background-color: #eef4f9;
                padding: 20px;
                border-radius: 8px;
                margin-bottom: 20px;
            }
            .dashboard-section h2 {
                color: #667eea;
                margin-bottom: 15px;
            }
            .data-table {
                width: 100%;
                border-collapse: collapse;
                margin-top: 15px;
            }
            .data-table th,
            .data-table td {
                border: 1px solid #ddd;
                padding: 8px;
                text-align: left;
            }
            .data-table th {
                background-color: #667eea;
                color: white;
            }
            .data-table tr:nth-child(even) {
                background-color: #f2f2f2;
            }
            .logout-button {
                background-color: #dc3545;
                color: white;
                padding: 10px 20px;
                border: none;
                border-radius: 5px;
                cursor: pointer;
                font-size: 1rem;
                margin-top: 20px;
                float: right;
            }
            .logout-button:hover {
                background-color: #c82333;
            }
            /* Login form styles (these will primarily be in admin/login.astro) */
            .login-container {
                max-width: 400px;
                margin: 100px auto;
                padding: 30px;
                background: #fff;
                border-radius: 8px;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
                text-align: center;
            }
            .login-container h2 {
                color: #764ba2;
                margin-bottom: 25px;
            }
            .login-container form {
                display: flex;
                flex-direction: column;
                gap: 15px;
            }
            .login-container input[type="text"],
            .login-container input[type="password"] {
                padding: 10px;
                border: 1px solid #ddd;
                border-radius: 4px;
            }
            .login-container button {
                background-color: #764ba2;
                color: white;
                padding: 10px 15px;
                border: none;
                border-radius: 4px;
                cursor: pointer;
            }
            .login-container button:hover {
                background-color: #6a3e90;
            }
            .login-message {
                margin-top: 15px;
                padding: 10px;
                border-radius: 4px;
                background-color: #f8d7da;
                color: #721c24;
                border: 1px solid #f5c6cb;
                display: none;
            }
            .action-buttons button {
                margin-right: 5px; /* Space between buttons */
                padding: 6px 10px;
                font-size: 0.9em;
                border-radius: 4px;
                cursor: pointer;
                border: none;
            }
            .action-buttons button.confirm {
                background-color: #28a745; /* Green */
                color: white;
            }
            .action-buttons button.confirm:hover {
                background-color: #218838;
            }
            .action-buttons button.send {
                background-color: #007bff; /* Blue */
                color: white;
            }
            .action-buttons button.send:hover {
                background-color: #0056b3;
            }
        </style>
    </head>
    <body>
        <HeaderGrisha />
        <main>
            <button id="logout-button" class="logout-button"
                >Cerrar Sesión</button
            >
            <h1>Panel de Administración Rifa Grisha</h1>

            <section class="dashboard-section">
                <h2>Resumen de Registros</h2>
                <p>
                    Aquí se mostrará un resumen de los usuarios registrados y su
                    estado.
                </p>
                <table class="data-table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Correo</th>
                            <th>Estado</th>
                            <th>Números Rifa</th>
                            <th>Registro</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody id="user-list">
                        <!-- Los datos de los usuarios se cargarán aquí -->
                    </tbody>
                </table>
            </section>

            <section class="dashboard-section">
                <h2>Estadísticas Rápidas</h2>
                <p>Número total de registros, verificados, pagos, etc.</p>
            </section>
        </main>
        <script is:inline>
            const userListBody = document.getElementById("user-list");

            // Function to load users from API
            async function loadUsers() {
                try {
                    const response = await fetch("/api/admin/users");
                    if (!response.ok) {
                        if (response.status === 401) {
                            window.location.href = "/admin/login"; // Redirect to login if unauthorized
                            return;
                        }
                        throw new Error(
                            `HTTP error! status: ${response.status}`,
                        );
                    }
                    const users = await response.json();

                    userListBody.innerHTML = ""; // Clear existing rows

                    users.forEach((user) => {
                        const row = userListBody.insertRow();
                        row.insertCell().textContent =
                            user.id.substring(0, 8) + "..."; // Truncate ID
                        row.insertCell().textContent = user.email;
                        row.insertCell().textContent = user.status
                            .replace(/_/g, " ")
                            .toUpperCase(); // Format status
                        row.insertCell().textContent =
                            user.raffleNumbers.length > 0
                                ? user.raffleNumbers.join(", ")
                                : "N/A";
                        row.insertCell().textContent = new Date(
                            user.createdAt,
                        ).toLocaleString();

                        const actionsCell = row.insertCell();
                        actionsCell.className = "action-buttons";

                        // Confirm Payment Button
                        const confirmButton = document.createElement("button");
                        confirmButton.textContent = "Confirmar Pago";
                        confirmButton.className = "confirm";
                        confirmButton.addEventListener("click", () => {
                            confirmPayment(user.id); // Call confirmPayment function
                        });
                        actionsCell.appendChild(confirmButton);

                        // Send Raffle Link Button
                        const sendRaffleLinkButton =
                            document.createElement("button");
                        sendRaffleLinkButton.textContent = "Enviar Rifas";
                        sendRaffleLinkButton.className = "send";
                        sendRaffleLinkButton.dataset.userId = user.id;
                        sendRaffleLinkButton.addEventListener(
                            "click",
                            async () => {
                                const cantidadRifas = prompt(
                                    "Ingresa la cantidad de rifas a enviar:",
                                    "2",
                                );
                                if (
                                    cantidadRifas !== null &&
                                    !isNaN(Number(cantidadRifas)) &&
                                    Number(cantidadRifas) > 0 &&
                                    Number(cantidadRifas) % 2 === 0
                                ) {
                                    sendRaffleNumbers(user.id, cantidadRifas);
                                } else {
                                    alert(
                                        "Por favor, ingresa una cantidad válida de rifas (múltiplo de 2).",
                                    );
                                }

                                // Future: Generate and send unique link
                            },
                        );
                        actionsCell.appendChild(sendRaffleLinkButton);
                    });
                } catch (error) {
                    console.error("Error al cargar usuarios:", error);
                    userListBody.innerHTML =
                        '<tr><td colspan="6">Error al cargar usuarios. Por favor, asegúrate de haber iniciado sesión.</td></tr>';
                }
            }

            // Function to confirm payment
            async function confirmPayment(userId) {
                try {
                    const response = await fetch("/api/admin/confirm-payment", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({ userId }),
                    });

                    const data = await response.json();

                    if (response.ok) {
                        alert("Pago confirmado con éxito.");
                        // Refresh user list after confirming payment.
                        loadUsers();
                    } else {
                        alert("Error al confirmar el pago.");
                    }
                } catch (error) {
                    console.error("Error confirming payment:", error);
                    alert("Ocurrió un error al confirmar el pago.");
                }
            }

            // Function to send raffle numbers
            async function sendRaffleNumbers(userId, cantidadRifas) {
                try {
                    const response = await fetch("/api/admin/send-raffles", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                        },
                        body: JSON.stringify({ userId, cantidadRifas }), // Include cantidadRifas
                    });

                    const data = await response.json();

                    if (response.ok) {
                        alert("Números de rifa enviados con éxito.");
                        // Puedes agregar lógica para actualizar el estado del usuario o mostrar un mensaje.
                    } else {
                        alert("Error al enviar los números de rifa.");
                    }
                } catch (error) {
                    console.error(
                        "Error al enviar los números de rifa:",
                        error,
                    );
                    alert("Ocurrió un error al enviar los números de rifa.");
                }
            }

            // Logout function
            document
                .getElementById("logout-button")
                .addEventListener("click", async () => {
                    try {
                        const response = await fetch("/api/admin/logout", {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                            },
                        });

                        const data = await response.json();

                        if (response.ok && data.success) {
                            alert(data.message || "Sesión cerrada.");
                            window.location.href = "/admin/login";
                        } else {
                            alert(data.message || "Error al cerrar sesión.");
                        }
                    } catch (error) {
                        console.error(
                            "Error al intentar cerrar sesión:",
                            error,
                        );
                        alert("Ocurrió un error de conexión al cerrar sesión.");
                    }
                });

            // Load users on page load
            document.addEventListener("DOMContentLoaded", loadUsers);
        </script>
    </body>
</html>
