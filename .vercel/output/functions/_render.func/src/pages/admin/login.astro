---
import HeaderGrisha from "../../components/HeaderGrisha.astro";
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>Rifa Grisha - Acceso Administrador</title>
        <style>
            body {
                font-family: sans-serif;
                line-height: 1.6;
                margin: 0;
                padding: 0;
                background-color: #f4f4f4;
                color: #333;
            }
            main {
                max-width: 450px;
                margin: 80px auto;
                padding: 40px;
                background: #fff;
                border-radius: 12px;
                box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
                text-align: center;
            }
            h1 {
                color: #764ba2;
                font-size: 2.2rem;
                margin-bottom: 30px;
            }
            form {
                display: flex;
                flex-direction: column;
                gap: 20px;
                margin-top: 30px;
            }
            label {
                text-align: left;
                font-weight: bold;
                margin-bottom: 5px;
                color: #555;
            }
            input[type="text"],
            input[type="password"] {
                padding: 12px 15px;
                border: 1px solid #ddd;
                border-radius: 6px;
                width: 100%;
                box-sizing: border-box; /* Include padding and border in the element's total width and height */
                font-size: 1rem;
            }
            button {
                padding: 14px 25px;
                background-color: #764ba2;
                color: white;
                border: none;
                border-radius: 6px;
                cursor: pointer;
                font-size: 1.1rem;
                font-weight: bold;
                transition: background-color 0.3s ease;
                margin-top: 10px;
            }
            button:hover {
                background-color: #6a3e90;
            }
            .message {
                margin-top: 25px;
                padding: 15px;
                border-radius: 8px;
                font-weight: bold;
                display: none; /* Hidden by default */
            }
            .message.success {
                background-color: #d4edda;
                color: #155724;
                border: 1px solid #c3e6cb;
            }
            .message.error {
                background-color: #f8d7da;
                color: #721c24;
                border: 1px solid #f5c6cb;
            }
        </style>
    </head>
    <body>
        <HeaderGrisha />
        <main>
            <h1>Acceso al Panel de Administración</h1>
            <p>Por favor, ingresa tus credenciales.</p>

            <form id="login-form">
                <div>
                    <label for="username">Usuario:</label>
                    <input type="text" id="username" name="username" required autocomplete="username" />
                </div>
                <div>
                    <label for="password">Contraseña:</label>
                    <input type="password" id="password" name="password" required autocomplete="current-password" />
                </div>
                <button type="submit">Iniciar Sesión</button>
            </form>

            <div id="form-message" class="message"></div>
        </main>

        <script is:inline>
            document.getElementById('login-form').addEventListener('submit', async (event) => {
                event.preventDefault();
                const usernameInput = document.getElementById('username');
                const passwordInput = document.getElementById('password');
                const formMessage = document.getElementById('form-message');

                const username = usernameInput.value;
                const password = passwordInput.value;

                formMessage.style.display = 'none';
                formMessage.classList.remove('success', 'error');
                formMessage.textContent = '';

                try {
                    const response = await fetch('/api/admin/login', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ username, password }),
                    });

                    const data = await response.json();

                    if (response.ok && data.success) {
                        formMessage.textContent = data.message || 'Inicio de sesión exitoso.';
                        formMessage.className = 'message success';
                        // Redirigir al panel de administración
                        setTimeout(() => {
                            window.location.href = '/admin';
                        }, 1000); // Pequeño retraso antes de redirigir
                    } else {
                        formMessage.textContent = data.message || 'Credenciales incorrectas.';
                        formMessage.className = 'message error';
                    }
                } catch (error) {
                    console.error("Error al iniciar sesión:", error);
                    formMessage.textContent = "Ocurrió un error de conexión. Inténtalo de nuevo más tarde.";
                    formMessage.className = 'message error';
                } finally {
                    formMessage.style.display = 'block';
                }
            });
        </script>
    </body>
</html>
