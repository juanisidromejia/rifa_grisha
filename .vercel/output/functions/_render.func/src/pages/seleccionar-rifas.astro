---
import HeaderGrisha from "../components/HeaderGrisha.astro";

// Get email, cantidad, and token from the URL
const urlParams = new URLSearchParams(Astro.url.search);
const email = urlParams.get("email");
const cantidad = urlParams.get("cantidad");
const token = urlParams.get("token");

let validationError = "";
let successMessage = "";
let raffleNumbers = []; // To store selected raffle numbers

if (!email || !cantidad || !token) {
    return Astro.redirect("/"); // Redirect if URL parameters are missing
}

// Validate the number of raffles (optional)
if (
    isNaN(Number(cantidad)) ||
    Number(cantidad) <= 0 ||
    Number(cantidad) % 2 !== 0
) {
    return Astro.redirect("/"); // Redirect if cantidad is invalid
}

// TODO:  Implement token validation
---

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <title>Rifa Grisha - Seleccionar Rifas</title>
        <style>
            body {
                font-family: sans-serif;
                line-height: 1.6;
                margin: 0;
                padding: 0;
                background-color: #f4f4f4;
                color: #333;
            }
            main {
                max-width: 800px;
                margin: 20px auto;
                padding: 20px;
                background: #fff;
                border-radius: 8px;
                box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
                text-align: center;
            }
            h1 {
                color: #764ba2;
                font-size: 2.5rem;
                margin-bottom: 30px;
            }
            p {
                margin-bottom: 15px;
                font-size: 1.1rem;
            }
            form {
                display: flex;
                flex-direction: column;
                gap: 20px;
                align-items: center;
            }
            input[type="text"] {
                padding: 12px 15px;
                border: 1px solid #ccc;
                border-radius: 5px;
                width: 100%;
                max-width: 300px;
                font-size: 1.2rem;
                text-align: center;
            }
            button {
                padding: 14px 25px;
                background-color: #28a745;
                color: white;
                border: none;
                border-radius: 6px;
                cursor: pointer;
                font-size: 1rem;
                font-weight: bold;
                transition: background-color 0.3s ease;
            }
            button:hover {
                background-color: #218838;
            }
            .message {
                margin-top: 20px;
                padding: 10px;
                border-radius: 8px;
                font-weight: bold;
            }
            .message.success {
                background-color: #d4edda;
                color: #155724;
                border: 1px solid #c3e6cb;
            }
            .message.error {
                background-color: #f8d7da;
                color: #721c24;
                border: 1px solid #f5c6cb;
            }
        </style>
    </head>
    <body>
        <HeaderGrisha />
        <main>
            <h1>Selecciona tus Números de Rifa</h1>
            {validationError && <p class="message error">{validationError}</p>}
            {successMessage && <p class="message success">{successMessage}</p>}

            <p>
                Correo: <strong>{email}</strong>
                <br />
                Debes seleccionar <strong>{Number(cantidad) / 2}</strong> números
                de rifa.
            </p>

            <form method="POST" id="raffle-form">
                <label for="raffleNumbers">Números (separados por comas):</label
                >
                <input
                    type="text"
                    id="raffleNumbers"
                    name="raffleNumbers"
                    placeholder="Ej: 001, 050, 999"
                    required
                />
                <button type="submit">Guardar Selección</button>
            </form>
        </main>
        <script is:inline client:load>
            // Asegúrate de que el script se ejecuta en el cliente
            // Function to load users from API (similar to admin panel, but not needed here)
            //   async function loadUsers() {
            //     try {
            //       const response = await fetch('/api/admin/users');
            //       if (!response.ok) {
            //         throw new Error(`HTTP error! status: ${response.status}`);
            //       }
            //       const users = await response.json();
            //     } catch (error) {
            //       console.error('Error al cargar usuarios:', error);
            //     }
            //   }

            // Function to validate a single raffle number
            async function checkRaffleNumber(number) {
                try {
                    const baseURL = window.location.origin; // Add base URL
                    const response = await fetch(
                        `${baseURL}/api/check-raffle-number`,
                        {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json",
                            },
                            body: JSON.stringify({ raffleNumber: number }),
                        },
                    );

                    const data = await response.json();
                    return data.available;
                } catch (error) {
                    console.error("Error checking raffle number:", error);
                    return false; // Consider the number unavailable on error
                }
            }

            // Handle form submission
            document
                .getElementById("raffle-form")
                .addEventListener("submit", async (event) => {
                    event.preventDefault();
                    const raffleNumbersInput =
                        document.getElementById("raffleNumbers");
                    const enteredNumbers = raffleNumbersInput.value
                        .split(",")
                        .map((num) => num.trim())
                        .filter((num) => num !== "");
                    const formMessage = document.getElementById("form-message");

                    formMessage.style.display = "none"; // Ocultar mensaje anterior
                    formMessage.classList.remove("success", "error");
                    formMessage.textContent = "";

                    if (enteredNumbers.length != Number(cantidad) / 2) {
                        validationError =
                            "Debes ingresar la cantidad correcta de números.";
                        formMessage.textContent = validationError;
                        formMessage.classList.add("message", "error");
                        formMessage.style.display = "block";
                        return;
                    }
                    if (enteredNumbers.length > 0) {
                        let allValid = true;
                        for (const raffleNumber of enteredNumbers) {
                            if (!/^\d{3}$/.test(raffleNumber)) {
                                validationError =
                                    "Los números de rifa deben ser números de 3 dígitos.";
                                allValid = false;
                                break;
                            }
                            const isAvailable =
                                await checkRaffleNumber(raffleNumber);
                            if (!isAvailable) {
                                validationError = `El número ${raffleNumber} ya está asignado.`;
                                allValid = false;
                                break;
                            }
                        }

                        if (allValid) {
                            // TODO: Call API route to save the numbers and redirect
                            successMessage =
                                "¡Números validados! Redirigiendo...";
                            formMessage.textContent = successMessage;
                            formMessage.classList.add("message", "success");

                            // Save to local storage for testing
                            try {
                                const response = await fetch(
                                    "/api/save-raffle-numbers",
                                    {
                                        method: "POST",
                                        headers: {
                                            "Content-Type": "application/json",
                                        },
                                        body: JSON.stringify({
                                            email: email,
                                            token: token,
                                            raffleNumbers: enteredNumbers,
                                            cantidad: cantidad,
                                        }),
                                    },
                                );
                                const data = await response.json();
                                console.log(data.message);
                                if (response.ok) {
                                    window.location.href =
                                        "/gracias-por-participar";
                                }
                            } catch (error) {
                                console.error(
                                    "Error al guardar números:",
                                    error,
                                );
                                successMessage =
                                    "Hubo un error al guardar los números. Intenta de nuevo.";
                                formMessage.classList.add("message", "error");
                                formMessage.textContent = successMessage;
                            }
                        }
                        // If validation fails, display the error.
                        else {
                            formMessage.textContent = validationError;
                            formMessage.classList.add("message", "error");
                        }
                    } else {
                        formMessage.textContent =
                            "Debes ingresar al menos un número de rifa.";
                        formMessage.classList.add("message", "error");
                    }
                    formMessage.style.display = "block";
                });
        </script>
    </body>
</html>
